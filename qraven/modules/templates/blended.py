from ..hydrologicproc import addprocess


# This method loads a template of HBV-EC into the GUI
def load_blended(self):
    try:
        table = self.dlg.table_hydroprocess  # Get the hydrological processes table

        # Sets the model parameters

        self.dlg.combo_routing.setCurrentText("ROUTE_NONE")
        self.dlg.combo_catchment.setCurrentText("ROUTE_DUMP")
        self.dlg.combo_evapo.setCurrentText("PET_OUDIN")
        self.dlg.combo_rainsnowfrac.setCurrentText("RAINSNOW_HBV")
        self.dlg.combo_potentialmelt.setCurrentText("POTMELT_HMETS")

        self.dlg.combo_soilmod.setCurrentText("SOIL_MULTILAYER")
        self.dlg.spin_soilmod.setValue(3)

        # Sets the hydrological processes
        for i in range(25):
            addprocess(self)

        combo_proc = table.cellWidget(0, 0)
        combo_proc.setCurrentText("Precipitation")
        combo_alg = table.cellWidget(0, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(0, 2)
        combo_from.setCurrentText("ATMOS_PRECIP")
        combo_to = table.cellWidget(0, 4)
        combo_to.setCurrentText("MULTIPLE")

        
        combo_proc = table.cellWidget(1, 0)
        combo_proc.setCurrentText("ProcessGroup")
        combo_alg = table.cellWidget(1, 1)
        combo_alg.setCurrentText("PRECIP_RAVEN")
        combo_from = table.cellWidget(1, 2)
        combo_from.setCurrentText("ATMOS_PRECIP")
        combo_to = table.cellWidget(1, 4)
        combo_to.setCurrentText("MULTIPLE")

        combo_proc = table.cellWidget(2, 0)
        combo_proc.setCurrentText("CanopyEvaporation")
        combo_alg = table.cellWidget(2, 1)
        combo_alg.setCurrentText("CANEVP_ALL")
        combo_from = table.cellWidget(2, 2)
        combo_from.setCurrentText("CANOPY")
        combo_to = table.cellWidget(2, 4)
        combo_to.setCurrentText("ATMOSPHERE")

        combo_proc = table.cellWidget(3, 0)
        combo_proc.setCurrentText("CanopySublimation")
        combo_alg = table.cellWidget(3, 1)
        combo_alg.setCurrentText("SUBLIM_ALL")
        combo_from = table.cellWidget(3, 2)
        combo_from.setCurrentText("CANOPY_SNOW")
        combo_to = table.cellWidget(3, 4)
        combo_to.setCurrentText("ATMOSPHERE")

        combo_proc = table.cellWidget(4, 0)
        combo_proc.setCurrentText("SnowBalance")
        combo_alg = table.cellWidget(4, 1)
        combo_alg.setCurrentText("SNOBAL_SIMPLE_MELT")
        combo_from = table.cellWidget(4, 2)
        combo_from.setCurrentText("SNOW")
        combo_to = table.cellWidget(4, 4)
        combo_to.setCurrentText("SNOW_LIQ")

        combo_proc = table.cellWidget(5, 0)
        combo_proc.setCurrentText("Overflow")
        combo_alg = table.cellWidget(5, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(5, 2)
        combo_from.setCurrentText("SNOW_LIQ")
        combo_to = table.cellWidget(5, 4)
        combo_to.setCurrentText("PONDED_WATER")

        combo_proc = table.cellWidget(6, 0)
        combo_proc.setCurrentText("Flush")
        combo_alg = table.cellWidget(6, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(6, 2)
        combo_from.setCurrentText("PONDED_WATER")
        combo_to = table.cellWidget(6, 4)
        combo_to.setCurrentText("GLACIER")
        checkconditional = table.cellWidget(6, 6)
        checkconditional.setChecked(True)
        combo_basedtype = table.cellWidget(6, 7)
        combo_basedtype.setCurrentText("HRU_TYPE")
        combo_comparison = table.cellWidget(6, 8)
        combo_comparison.setCurrentText("IS")
        txt_hrutype = table.cellWidget(6, 9)
        txt_hrutype.setText("GLACIER")

        combo_proc = table.cellWidget(7, 0)
        combo_proc.setCurrentText("GlacierMelt")
        combo_alg = table.cellWidget(7, 1)
        combo_alg.setCurrentText("GMELT_HBV")
        combo_from = table.cellWidget(7, 2)
        combo_from.setCurrentText("GLACIER_ICE")
        combo_to = table.cellWidget(7, 4)
        combo_to.setCurrentText("GLACIER")

        combo_proc = table.cellWidget(8, 0)
        combo_proc.setCurrentText("GlacierRelease")
        combo_alg = table.cellWidget(8, 1)
        combo_alg.setCurrentText("GRELEASE_HBV_EC")
        combo_from = table.cellWidget(8, 2)
        combo_from.setCurrentText("GLACIER")
        combo_to = table.cellWidget(8, 4)
        combo_to.setCurrentText("SURFACE_WATER")

        combo_proc = table.cellWidget(9, 0)
        combo_proc.setCurrentText("Infiltration")
        combo_alg = table.cellWidget(9, 1)
        combo_alg.setCurrentText("INF_HBV")
        combo_from = table.cellWidget(9, 2)
        combo_from.setCurrentText("PONDED_WATER")
        combo_to = table.cellWidget(9, 4)
        combo_to.setCurrentText("MULTIPLE")

        combo_proc = table.cellWidget(10, 0)
        combo_proc.setCurrentText("Flush")
        combo_alg = table.cellWidget(10, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(10, 2)
        combo_from.setCurrentText("SURFACE_WATER")
        combo_to = table.cellWidget(10, 4)
        combo_to.setCurrentText("SOIL[1]")
        checkconditional = table.cellWidget(10, 6)
        checkconditional.setChecked(True)
        combo_basedtype = table.cellWidget(10, 7)
        combo_basedtype.setCurrentText("HRU_TYPE")
        combo_comparison = table.cellWidget(10, 8)
        combo_comparison.setCurrentText("IS_NOT")
        txt_hrutype = table.cellWidget(10, 9)
        txt_hrutype.setText("GLACIER")

        combo_proc = table.cellWidget(11, 0)
        combo_proc.setCurrentText("Flush")
        combo_alg = table.cellWidget(11, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(11, 2)
        combo_from.setCurrentText("SOIL[2]")
        combo_to = table.cellWidget(11, 4)
        combo_to.setCurrentText("SURFACE_WATER")
        checkconditional = table.cellWidget(11, 6)
        checkconditional.setChecked(True)
        combo_basedtype = table.cellWidget(11, 7)
        combo_basedtype.setCurrentText("HRU_TYPE")
        combo_comparison = table.cellWidget(11, 8)
        combo_comparison.setCurrentText("IS")
        txt_hrutype = table.cellWidget(11, 9)
        txt_hrutype.setText("LAKE")

        combo_proc = table.cellWidget(12, 0)
        combo_proc.setCurrentText("SoilEvaporation")
        combo_alg = table.cellWidget(12, 1)
        combo_alg.setCurrentText("SOILEVAP_HBV")
        combo_from = table.cellWidget(12, 2)
        combo_from.setCurrentText("SOIL[0]")
        combo_to = table.cellWidget(12, 4)
        combo_to.setCurrentText("ATMOSPHERE")

        combo_proc = table.cellWidget(13, 0)
        combo_proc.setCurrentText("CapillaryRise")
        combo_alg = table.cellWidget(13, 1)
        combo_alg.setCurrentText("CRISE_HBV")
        combo_from = table.cellWidget(13, 2)
        combo_from.setCurrentText("SOIL[1]")
        combo_to = table.cellWidget(13, 4)
        combo_to.setCurrentText("SOIL[0]")

        combo_proc = table.cellWidget(14, 0)
        combo_proc.setCurrentText("LakeEvaporation")
        combo_alg = table.cellWidget(14, 1)
        combo_alg.setCurrentText("LAKE_EVAP_BASIC")
        combo_from = table.cellWidget(14, 2)
        combo_from.setCurrentText("SOIL[2]")
        combo_to = table.cellWidget(14, 4)
        combo_to.setCurrentText("ATMOSPHERE")

        combo_proc = table.cellWidget(15, 0)
        combo_proc.setCurrentText("SoilEvaporation")
        combo_alg = table.cellWidget(15, 1)
        combo_alg.setCurrentText("SOILEVAP_HBV")
        combo_from = table.cellWidget(15, 2)
        combo_from.setCurrentText("SOIL[2]")
        combo_to = table.cellWidget(15, 4)
        combo_to.setCurrentText("ATMOSPHERE")

        combo_proc = table.cellWidget(16, 0)
        combo_proc.setCurrentText("Percolation")
        combo_alg = table.cellWidget(16, 1)
        combo_alg.setCurrentText("PERC_CONSTANT")
        combo_from = table.cellWidget(16, 2)
        combo_from.setCurrentText("SOIL[1]")
        combo_to = table.cellWidget(16, 4)
        combo_to.setCurrentText("SOIL[2]")

        combo_proc = table.cellWidget(17, 0)
        combo_proc.setCurrentText("Baseflow")
        combo_alg = table.cellWidget(17, 1)
        combo_alg.setCurrentText("BASE_POWER_LAW")
        combo_from = table.cellWidget(17, 2)
        combo_from.setCurrentText("SOIL[1]")
        combo_to = table.cellWidget(17, 4)
        combo_to.setCurrentText("SURFACE_WATER")

        combo_proc = table.cellWidget(18, 0)
        combo_proc.setCurrentText("Baseflow")
        combo_alg = table.cellWidget(18, 1)
        combo_alg.setCurrentText("BASE_LINEAR")
        combo_from = table.cellWidget(18, 2)
        combo_from.setCurrentText("SOIL[2]")
        combo_to = table.cellWidget(18, 4)
        combo_to.setCurrentText("SURFACE_WATER")

        combo_proc = table.cellWidget(19, 0)
        combo_proc.setCurrentText("LateralEquilibrate")
        combo_alg = table.cellWidget(19, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(19, 2)
        combo_from.setCurrentText("AllHRUs")
        combo_to = table.cellWidget(19, 4)
        combo_to.setCurrentText("SOIL[1]")
        spin_pct = table.cellWidget(19, 11)
        spin_pct.setValue(1.0)

        combo_proc = table.cellWidget(20, 0)
        combo_proc.setCurrentText("LateralEquilibrate")
        combo_alg = table.cellWidget(20, 1)
        combo_alg.setCurrentText("RAVEN_DEFAULT")
        combo_from = table.cellWidget(20, 2)
        combo_from.setCurrentText("AllHRUs")
        combo_to = table.cellWidget(20, 4)
        combo_to.setCurrentText("SOIL[2]")
        spin_pct = table.cellWidget(20, 11)
        spin_pct.setValue(1.0)

        table.resizeColumnsToContents()  # Resizes the width of the column automatically

        print("Blended template loaded.")
        self.iface.messageBar().pushSuccess("Success", "Loaded Blended template successfully")
    except Exception as e:
        print('An error occured while loading Blended template.')
        print(e)
